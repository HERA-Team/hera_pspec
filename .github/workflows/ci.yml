name: Run Tests
 
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  tests:
    name: Tests
    env:
      ENV_NAME: hera_pspec_tests
      PYTHON: ${{ matrix.python-version }}
      OS: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9]
      fail-fast: false

    steps:
    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    
    - name: Get Miniconda (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/miniconda.sh;
        bash $HOME/miniconda.sh -b -p $HOME/miniconda

    - name: Get Miniconda (Mac OS)
      if: matrix.os == 'macos-latest'
      run: |
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O $HOME/miniconda.sh;
        bash $HOME/miniconda.sh -b -p $HOME/miniconda

    - name: Setup Environment
      run: |
        export PATH="$HOME/miniconda/bin:$PATH"
        ./ci/install_conda.sh

    - name: Install
      run: |
        export PATH="$HOME/miniconda/bin:$PATH"
        source activate ${ENV_NAME}
        pip install .

    - name: Run Tests
      run: |
        export PATH="$HOME/miniconda/bin:$PATH"
        source activate $ENV_NAME
        export MPLBACKEND=agg
        #nosetests -P hera_pspec --with-coverage --cover-package=hera_pspec --verbose
        pytest --cov=hera_pspec --cov-config="./.coveragerc" \
               --cov-report xml:"./coverage.xml" --junitxml="./test-reports/xunit.xml"

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        directory: ./coverage/reports/
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
